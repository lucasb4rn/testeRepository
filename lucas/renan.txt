package br.com.lucas.main;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;

import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.DirectoryChooser;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

//Se quisermos que essa classe trate evento, ela deve herdar de EventHandler
public class Principal extends Application {

	protected File selectedDirectoryWinrar;
	protected File selectedDirectoryDrive;

	@Override
	public void start(final Stage stage) throws Exception {

		final FileChooser fileChooser = new FileChooser();

		final File localSalvarOArquivo = new File("C:\\Backup_Automatico_Riberus\\BKP_RIBERUS.bat");

		Button botaoLocalParaArmazenarBackup = new Button("Carregar Nuvem ou Disco");
		Button botaoCarregarWinrar = new Button("Carregar Winrar");
		Button botaoGerarScript = new Button("Gerar Script");
		Button botaoSair = new Button("Sair");
		Button botaoLimpar = new Button("Limpar");
		
		final Label invisivel = new Label("");
		invisivel.setVisible(false);

		final TextField txtCaminhoPastaBackup = new TextField();
		txtCaminhoPastaBackup.setEditable(false);

		final Label lblNomeBancoDeDados = new Label("Nome do banco:");
		Label lblLocalOndeFoiSalvo = new Label("Local que foi salvo o script de Backup");

		final TextField txtLocalDoArquivo = new TextField();
		txtLocalDoArquivo.setPrefWidth(425);
		
		txtLocalDoArquivo.setEditable(false);

		final TextField txtNomeBancoDeDados = new TextField();
		final TextField txtCaminhoWinrar = new TextField();
		txtCaminhoWinrar.setEditable(false);
		
		final TextField txtCaminhoDrive = new TextField();
		txtCaminhoDrive.setEditable(false);

		VBox localSalvo = new VBox();
		final VBox raiz = new VBox();
		final HBox localBackup = new HBox();
		HBox botoes = new HBox();
		final VBox bancoDeDados = new VBox();
		final VBox winrar = new VBox();
		final VBox driveForm = new VBox();
		final HBox empresaBanco = new HBox();
		final VBox empresa = new VBox();
		final Label lblNomeEmpresa = new Label("Nome da Empresa");
		final TextField txtEmpresa = new TextField();
		empresa.setAlignment(Pos.TOP_LEFT);
		empresa.setPadding(new Insets(10));

		Button pasta = new Button("Abrir");

		localBackup.getChildren().addAll(txtLocalDoArquivo, pasta);
	
		txtCaminhoWinrar.setPrefWidth(425);

		empresa.getChildren().addAll(lblNomeEmpresa, txtEmpresa);
		empresaBanco.getChildren().addAll(bancoDeDados, empresa);

		final Label campoObrigatorioWinrar = new Label("Seleção obrigatória");
		final Label campoObrigatorioBackup = new Label("Seleção obrigatória");
		final Label campoObrigatorioBanco = new Label("Preenchimento obrigatório");

		campoObrigatorioWinrar.setTextFill(Color.RED);
		campoObrigatorioBackup.setTextFill(Color.RED);
		campoObrigatorioBanco.setTextFill(Color.RED);

		driveForm.getChildren().addAll(botaoLocalParaArmazenarBackup, txtCaminhoDrive);
		driveForm.setAlignment(Pos.TOP_LEFT);
		driveForm.setPadding(new Insets(10));

		botoes.getChildren().addAll(botaoGerarScript, botaoLimpar, botaoSair);
		botoes.setSpacing(10);
		botoes.setAlignment(Pos.CENTER);
		botoes.setPadding(new Insets(10));

		localSalvo.getChildren().addAll(lblLocalOndeFoiSalvo, localBackup);
		localSalvo.setAlignment(Pos.TOP_LEFT);
		localSalvo.setPadding(new Insets(10));

		bancoDeDados.getChildren().addAll(lblNomeBancoDeDados, txtNomeBancoDeDados);
		bancoDeDados.setAlignment(Pos.TOP_LEFT);
		bancoDeDados.setPadding(new Insets(10));

		winrar.getChildren().addAll(botaoCarregarWinrar, txtCaminhoWinrar);
		winrar.setPadding(new Insets(10));

		raiz.getChildren().addAll(empresaBanco, winrar, driveForm, localSalvo, botoes);
		raiz.setTranslateY(5);
		raiz.setPadding(new Insets(10));

		Scene cena = new Scene(raiz, 520, 330);
		stage.setTitle("Backup Automatico Riberus");
		stage.setScene(cena);
		stage.resizableProperty().setValue(Boolean.FALSE);
		stage.show();
		
		
		
		//Image image = new Image("./lucas.png");
        //stage.getIcons().add(image);
		
		
		pasta.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(final ActionEvent e) {
				
				if(txtLocalDoArquivo.getText().length() > 0) {
					
					Desktop desktop = Desktop.getDesktop();
					File dirToOpen = null;
					dirToOpen = new File(txtLocalDoArquivo.getText());
					try {
						desktop.open(dirToOpen);
					} catch (IOException e1) {
						e1.printStackTrace();
					}
					
				}
			}
			
		});

		botaoGerarScript.setOnAction(new EventHandler<ActionEvent>() {

			public void handle(ActionEvent event) {

				MontaScript escreveScript = new MontaScript();
				CriaDiretorio diretorio = new CriaDiretorio();
				diretorio.criarDiretorio();

				if (diretorio.getDiretorio().getPath() != null && selectedDirectoryWinrar != null
						&& selectedDirectoryDrive != null && txtNomeBancoDeDados.getText().length() > 0) {

					escreveScript.escreve(localSalvarOArquivo.getPath(), txtNomeBancoDeDados.getText(),
							diretorio.getDiretorio().getPath(), selectedDirectoryWinrar.getPath(),
							selectedDirectoryDrive.getAbsolutePath(), txtEmpresa.getText());

					txtLocalDoArquivo.setText(diretorio.getDiretorio().getPath());

				}

				if (txtCaminhoWinrar.getText().length() <= 0 && winrar.getChildren().size() == 2) {
					stage.setHeight(stage.getHeight() + 15);
					winrar.getChildren().add(0, campoObrigatorioWinrar);

				}

				if (txtCaminhoDrive.getText().length() <= 0 && driveForm.getChildren().size() == 2) {
					stage.setHeight(stage.getHeight() + 15);
					driveForm.getChildren().add(0, campoObrigatorioBackup);

				}

				if (txtNomeBancoDeDados.getText().length() <= 0 && bancoDeDados.getChildren().size() == 2) {
					stage.setHeight(stage.getHeight() + 15);
					bancoDeDados.getChildren().add(0, campoObrigatorioBanco);
					empresa.getChildren().add(0, invisivel);

				}

			}

		});

		txtNomeBancoDeDados.focusedProperty().addListener(new ChangeListener<Boolean>() {

			@Override
			public void changed(ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean newValue) {

				if (newValue != false) {

					if (bancoDeDados.getChildren().size() == 3) {
						bancoDeDados.getChildren().remove(0);
						empresa.getChildren().remove(0);
						
						stage.setHeight(stage.getHeight() - 15);
					}

				}

			}

		});

		botaoLimpar.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(final ActionEvent e) {
				txtCaminhoDrive.setText("");
				txtCaminhoPastaBackup.setText("");
				txtCaminhoWinrar.setText("");
				txtLocalDoArquivo.setText("");
				txtNomeBancoDeDados.setText("");
				txtEmpresa.setText("");

				if (winrar.getChildren().size() == 3) {
					winrar.getChildren().remove(0);
					stage.setHeight(stage.getHeight() - 15);
				}

				if (bancoDeDados.getChildren().size() == 3) {
					bancoDeDados.getChildren().remove(0);
					empresa.getChildren().remove(0);
					stage.setHeight(stage.getHeight() - 15);
				}

				if (driveForm.getChildren().size() == 3) {
					driveForm.getChildren().remove(0);
					stage.setHeight(stage.getHeight() - 15);
				}

			}
		});

		botaoCarregarWinrar.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(final ActionEvent e) {
				final DirectoryChooser directoryChooser = new DirectoryChooser();

				selectedDirectoryWinrar = directoryChooser.showDialog(stage);

				if (selectedDirectoryWinrar != null) {
					txtCaminhoWinrar.setText(selectedDirectoryWinrar.getPath());
					txtCaminhoWinrar.setEditable(false);

					selectedDirectoryWinrar.getPath();
				}

				if (winrar.getChildren().size() == 3) {
					winrar.getChildren().remove(0);
					stage.setHeight(stage.getHeight() - 15);
				}

			}
		});

		botaoLocalParaArmazenarBackup.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(final ActionEvent e) {
				final DirectoryChooser directoryChooserNovo = new DirectoryChooser();

				selectedDirectoryDrive = directoryChooserNovo.showDialog(stage);
				if (selectedDirectoryDrive != null) {

					txtCaminhoDrive.setText(selectedDirectoryDrive.getPath());
					txtCaminhoDrive.setEditable(false);

					selectedDirectoryDrive.getAbsolutePath();
				}

				if (driveForm.getChildren().size() == 3) {
					driveForm.getChildren().remove(0);
					stage.setHeight(stage.getHeight() - 15);
				}

			}
		});

		botaoSair.setOnAction(new EventHandler<ActionEvent>() {
			public void handle(ActionEvent event) {
				stage.close();
			}
		});

	}

	public static void main(String[] args) {
		launch();
	}

}